;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Start of xbindkeys guile configuration ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; This configuration is guile based.
;;   http://www.gnu.org/software/guile/guile.html
;; any functions that work in guile will work here.
;; see EXTRA FUNCTIONS:

;; Version: 1.8.5

;; If you edit this file, do not forget to uncomment any lines
;; that you change.
;; The semicolon(;) symbol may be used anywhere for comments.

;; To specify a key, you can use 'xbindkeys --key' or
;; 'xbindkeys --multikey' and put one of the two lines in this file.

;; A list of keys is in /usr/include/X11/keysym.h and in
;; /usr/include/X11/keysymdef.h
;; The XK_ is not needed.

;; List of modifier:
;;   Release, Control, Shift, Mod1 (Alt), Mod2 (NumLock),
;;   Mod3 (CapsLock), Mod4, Mod5 (Scroll).


;; The release modifier is not a standard X modifier, but you can
;; use it if you want to catch release instead of press events

;; By defaults, xbindkeys does not pay attention to modifiers
;; NumLock, CapsLock and ScrollLock.
;; Uncomment the lines below if you want to use them.
;; To dissable them, call the functions with #f


;;;;EXTRA FUNCTIONS: Enable numlock, scrolllock or capslock usage
;;(set-numlock! #t)
;;(set-scrolllock! #t)
;;(set-capslock! #t)

;;;;; Scheme API reference
;;;;
;; Optional modifier state:
;; (set-numlock! #f or #t)
;; (set-scrolllock! #f or #t)
;; (set-capslock! #f or #t)
;; 
;; Shell command key:
;; (xbindkey key "foo-bar-command [args]")
;; (xbindkey '(modifier* key) "foo-bar-command [args]")
;; 
;; Scheme function key:
;; (xbindkey-function key function-name-or-lambda-function)
;; (xbindkey-function '(modifier* key) function-name-or-lambda-function)
;; 
;; Other functions:
;; (remove-xbindkey key)
;; (run-command "foo-bar-command [args]")
;; (grab-all-keys)
;; (ungrab-all-keys)
;; (remove-all-keys)
;; (debug)


;; # Keys
;; Examples of commands:

(define (keys)
  "Used keys"
  (run-command "notify-send -a \"xbindkeys\" \"switched to overworld keys\"")

  ;; ## General
  (xbindkey '(control alt l) "slock")
  (xbindkey '(mod4 p) "dmenu_run")
  (xbindkey '(control alt t) "tabbed urxvt -embed")
  (xbindkey-function '(mod4 shift Escape) (lambda()
                                            (run-command "notify-send -a \"xkill\" \"STARTING XKILL\"")
                                            (run-command "xkill")))

  ;; ## Audio
  ;; ### Volume
  (xbindkey-function '(XF86AudioRaiseVolume) (lambda()
                                      (run-command "amixer -q sset Master 5%+ unmute")
   ;;                                   (run-command "/home/joshua/.bin/print_current_volume")
                                      ))
  (xbindkey-function '(XF86AudioLowerVolume) (lambda()
                                      (run-command "amixer -q sset Master 5%- unmute")
  ;;                                    (run-command "/home/joshua/.bin/print_current_volume")
                                      ))
  (xbindkey '(XF86AudioMute) "amixer -q sset Master toggle")

  ;; ### Music
  (xbindkey '(XF86AudioPlay) "mpc toggle")
  (xbindkey '(XF86AudioStop) "mpc stop")
  (xbindkey '(shift XF86AudioLowerVolume) "mpc volume -5")
  (xbindkey '(shift XF86AudioRaiseVolume) "mpc volume +5")
  (xbindkey '(shift XF86AudioPlay) "urxvt -e 'ncmpcpp'")
  (xbindkey '(shift XF86AudioStop) "urxvt -e 'ncmpcpp'")
  (xbindkey '(XF86AudioNext) "mpc next")
  (xbindkey '(XF86AudioPrev) "mpc prev")

  ;; ## Browser
  (xbindkey '(mod4 shift p) "tabbed surf -e")

  ;; ## Combo Keys
  (xbindkey-function '(mod4 w) browser-binding))


(define (reset-bindings)
  (ungrab-all-keys)
  (remove-all-keys)
  (keys)
  (grab-all-keys))

;;
;; # Browser Bindings
;; This is a list of browsers and associated modes for them.
;;
(define (browser-binding)
  "Browser-bindings"
  (ungrab-all-keys)
  (remove-all-keys)
  (run-command "notify-send -a \"xbindkeys\" \"switched to browser keys\"")

  (xbindkey-function '(mod4 a)
                     (lambda()
                       (run-command "notify-send -a \"xbindkeys\" \"Firefox\"")
                       (run-command "aurora")
                       (reset-bindings)))

  (xbindkey-function '(mod4 shift a)
                     (lambda()
                       (run-command "notify-send -a \"xbindkeys\" \"Firefox -private\"")
                       (run-command "aurora -private")
                       (reset-bindings)))

  (xbindkey-function '(mod4 s)
                     (lambda()
                       (run-command "surf")
                       (reset-bindings)))

  (xbindkey-function '(mod4 e)
                     (lambda()
                       (run-command "tabbed surf -e")
                       (reset-bindings)))

  (xbindkey-function '(mod4 c)
                     (lambda()
                       (run-command "notify-send -a \"xbindkeys\" \"Chromium\"")
                       (run-command "chromium")
                       (reset-bindings)))

  (xbindkey-function '(mod4 Escape)
                     (lambda()
                       (reset-bindings)))

  (grab-all-keys))


(keys)
;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; End of xbindkeys guile configuration ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
